How to write a python GraphQL server?
=====================================

1.  First you write a schema:

    a.  You write your types.  I think of these as the nouns.

    b.  Next you write queries on those types.  I think of these as
        the reads, or your GET API endpoints, or your SELECT queries in
        SQL.

    c.  You write mutations.  These are your writes.  Maybe your inserts, updates,
        and deletes.

    d.  I'm skipping how to write subscriptions.  They sure look cool!

2.  Outside your schema, you write resolvers for your queries and for
    your mutations.


The schema for that simple bar
==============================

bogus_schema.graphql

There's a war going on over how much should we write these schemas by
hand, versus use code to build them up, versus use code to infer them by
studying the underlying datasources, like databases, or REST APIs.

Warnings
========

*   When you write resolvers, you need to make sure that you think
    through who is asking for what data.

    In other words, GraphQL doesn't solve thorny authorization issues.

    For example, imagine that you make a GraphQL interface for a bank.
    You limit access to logged-in users.  But in your resolvers, you
    need to make sure that Matt is only accessing data that Matt is
    blessed to access.

